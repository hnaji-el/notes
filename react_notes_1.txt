1. React
  - React is a component-based library.

2. Component
  - A component is a bundle of markup, styles and logic that controls
    everything about a specific part of the UI.

3. Code organization
  - Instead of separating out application into markup (written in HTML),
    styles (written in CSS) and logic (written JavaScript),
    we organize our application into components.
  - It is a different mental model for code organization.

4. Mechanisms of reuse
  - With HTML, we have partials.
  - With CSS, we have classes.
  - With JavaScript, we have functions.
  - With React, we have components that bundle up all 3.

5. Application Structure
  [ index.js ]
  - It is responsible for rendering our React application, turning the React elements
    we write into live DOM nodes.
  - It includes setup tasks like import global CSS files, or set up any error-logging services.
  [ app.js ]
  - It manages core layout stuff.
  - It includes routes.

6. Mapping over data
  - You can render an array inside JSX, React will unpack it and render each item.

7. Keys
  - Keys exist to show React the route. By uniquely indentifying each item across all snapshots,
    React can figure out exactly what to do, ensuring the best performance and no edge-case issues.

8. Styling in React
                                                                                      CSS Modules
                                                                                      Styled Components
  - *:Traditional CSS Styling Method  ==>  **:Naming Methodologies like BEM  ==>  ***:Emotion
                                                                                      Vanilla Extracts
                                                                                      Stitches

  *:   Problems: naming, specificity races that produce long and long CSS selectors, etc.
  **:  Solve the problems if it's followed 100%, and this is needed a superhuman discipline, especially
       for larger projects and teams.
  ***: Wet get all the benefits of naming methodologies like BEM, in terms of guaranteed unique selector
       names. The come with AUTOMATIC SCOPING.
       AUTOMATIC SCOPING: generate long, guaranteed-unique CSS selector names and scoped them to the component.















